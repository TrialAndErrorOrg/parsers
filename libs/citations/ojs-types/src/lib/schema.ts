/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/submissions': {
    /** See `/submissions/{submissionId}` for notes about submission properties. */
    get: {
      parameters: {
        query: {
          /** Filter results by one or more submission statuses. Must match the value of one of the `STATUS_QUEUED`, `STATUS_SCHEDULED`, `STATUS_PUBLISHED` or `STATUS_DECLINED` constants. */
          status?: (1 | 3 | 4 | 5)[]
          /** Filter results by those assigned to one or more user ids. All users except managers and admins are automatically restricted to assigned submissions and do not need to pass this parameter. */
          assignedTo?: number[]
          /** How many results to return in a single request. Max is `100`. */
          count?: number
          /** Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`. */
          offset?: number
          /** Order the results returned. */
          orderBy?: 'dateSubmitted' | 'dateLastActivity' | 'lastModified' | 'title'
          /** Return the results in ascending or descending order. */
          orderDirection?: 'ASC' | 'DESC'
          /** Filter the results by those for which the author has not yet completed the submission process. */
          isIncomplete?: boolean
          /** Filter the results by those for which a reviewer has missed a deadline. */
          isOverdue?: boolean
          /** Filter the results by those which have not had activity for the last X days. */
          daysInactive?: number
          /** Filter the results by those with one or more publications assigned to a section. */
          sectionIds?: number[]
          /** Filter the results by those with one or more publications assigned to an issue. */
          issueIds?: number[]
          /** Filter the results by a search phrase matched against the title and authors. */
          searchPhrase?: string
        }
      }
      responses: {
        /** List of requested submissions. */
        200: {
          content: {
            'application/json': {
              itemsMax?: number
              items?: components['schemas']['SubmissionSummary'][]
            }
          }
        }
        /** You do not have permission to access submissions assigned to the user requested in the `assignedTo` parameter. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    post: {
      responses: {
        /** Details of the submission that was just added. */
        200: {
          content: {
            'application/json': components['schemas']['Submission']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
      }
      /** Details about the submission that should be created. */
      requestBody: {
        content: {
          'application/json': components['schemas']['SubmissionEditable']
        }
      }
    }
  }
  '/submissions/{submissionId}': {
    /**
     * * Unpublished submissions are only returned for assigned participants, editors and admins.
     * * `abstract` includes HTML markup.
     * * `pages` is usually a `string`. But in some cases it may return an array of arrays. Each array contains two items: the start and end page. Example: `[[25, 31], [45, 62]]`.
     * * `submissionProgress` will be > 0 if the submission is incomplete.
     * * `stages`, `reviewRounds` and `reviewAssignments` should only be returned for participants assigned to the submission.
     * * `reviewAssignments` should only expose user-identifying information for editors and admins.
     */
    get: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
        }
      }
      responses: {
        /** The submission details. */
        200: {
          content: {
            'application/json': components['schemas']['Submission']
          }
        }
        /** You do not have permission to access this submissions. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The submission could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    put: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
        }
      }
      responses: {
        /** The submission that was just edited with the new values after the update has occurred. */
        200: {
          content: {
            'application/json': components['schemas']['Submission']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
        /**
         * This error indicates one of the following:
         * * You are not allowed to edit a submission from the site-wide endpoint. You must use a context (journal/press/server) endpoint.
         * * You are not allowed to change the context (journal/press/server) of a submission.
         */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The submission could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
      /** The details about the submission that you want to edit. All params are optional. When a param is omitted, the existing value of that param will not be modified. */
      requestBody: {
        content: {
          'application/json': components['schemas']['SubmissionEditable']
        }
      }
    }
    /** Only journal managers and subeditors can make a request to this endpoint. */
    delete: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
        }
      }
      responses: {
        /** Details of the deleted submission. */
        200: {
          content: {
            'application/json': components['schemas']['Submission']
          }
        }
        /** You are not allowed to delete this submission. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The submission could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/submissions/{submissionId}/files': {
    /**
     * This will return all of a submission's files that the user is allowed to access, except review attachments and discussion files. A user is allowed to access different file stages depending on their stage assignment.
     * * Managers, subeditors and assistants can access all file stages if they are assigned to the matching workflow stage. For example, an assistant assigned to the copyediting stage can access files in `SUBMISSION_FILE_COPYEDIT` and `SUBMISSION_FILE_FINAL`.
     * * Authors are restricted to the `SUBMISSION_FILE_SUBMISSION`, `SUBMISSION_FILE_REVIEW_REVISION`, `SUBMISSION_FILE_COPYEDIT` and `SUBMISSION_FILE_PROOF` file stages. For example, an author with access to the copyediting stage will have access to `SUBMISSION_FILE_COPYEDIT` (copyedited files) but not `SUBMISSION_FILE_FINAL` (draft files).
     * * Reviewers and readers are not allowed to access this endpoint.
     * * Managers who are not assigned to the submission are allowed to access all file stages as though they are assigned to every workflow stage.
     */
    get: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
        }
        query: {
          /** Filter results by those submission files assigned to one or more file stage. One of the `SUBMISSION_FILE_` constants. */
          fileStages?: number[]
          /** Filter results by those submission files assigned to one or more review rounds. */
          reviewRoundIds?: number[]
        }
      }
      responses: {
        /** An array of the requested submission files. */
        200: {
          content: {
            'application/json': components['schemas']['SubmissionFileSummary'][]
          }
        }
        /**
         * You do not have permission to view the requested files.
         *
         * |Error Code|Description|
         * |---|---|
         * |`api.403.unauthorized`|You are not allowed to access files for this submission.|
         * |`api.submissionFiles.403.unauthorizedFileStageId`|You are not allowed to access files in one or more of the `fileStages` requested.|
         * |`api.submissionFiles.403.unauthorizedReviewRound`|You are not allowed to access files in one or more of the `reviewRoundIds` requested.
         */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    /** A user is allowed to upload to different file stages depending on their stage assignments. See the description for `GET /submission/{submissionId}/files` above. Once a submission has been completed, authors are no longer allowed to upload to `SUBMISSION_FILE_SUBMISSION`. Authors are not allowed to upload to `SUBMISSION_FILE_REVIEW_REVISION` until revisions have been requested. */
    post: {
      responses: {
        /** The new submission file. */
        200: {
          content: {
            'application/json': components['schemas']['SubmissionFile']
          }
        }
        /** There was an error when uploading the file or the values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
        /** You are not allowed to upload a file to the specified file stage of this submission. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
      /** Details about the submission file that should be created. */
      requestBody: {
        content: {
          'multipart/form-data': components['schemas']['SubmissionFileEditable']
        }
      }
    }
  }
  '/submissions/{submissionId}/files/{submissionFileId}': {
    /** You must pass the correct `stageId` when requesting a file. */
    get: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
          /** Submission File ID */
          submissionFileId: number
        }
        query: {
          /** The workflow stage id of the requested file. For example, `WORKFLOW_STAGE_ID_PRODUCTION`. */
          stageId: number
        }
      }
      responses: {
        /** Details of the submission file. */
        200: {
          content: {
            'application/json': components['schemas']['SubmissionFile']
          }
        }
        /** You are not allowed to access the requested file. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    /** You must pass the correct `stageId` when editing a file. */
    put: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
          /** Submission File ID */
          submissionFileId: number
        }
        query: {
          /** The workflow stage id of the file to be edited. For example, `WORKFLOW_STAGE_ID_PRODUCTION`. */
          stageId: number
        }
      }
      responses: {
        /** The submission file that was just edited with the new values after the update has occurred. */
        200: {
          content: {
            'application/json': components['schemas']['SubmissionFile']
          }
        }
        /** There was an error when uploading the file or the values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
        /** You are not allowed to edit the requested file. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
      /** The details about the submission file that you want to edit. All params are optional. When a param is omitted, the existing value of that param will not be modified. */
      requestBody: {
        content: {
          'application/json': components['schemas']['SubmissionFileEditable']
        }
      }
    }
    /** You must pass the correct `stageId` when deleting a file. */
    delete: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
          /** Submission File ID */
          submissionFileId: number
        }
        query: {
          /** The workflow stage id of the file to be edited. For example, `WORKFLOW_STAGE_ID_PRODUCTION`. */
          stageId: number
        }
      }
      responses: {
        /** The submission file that was just deleted. */
        200: {
          content: {
            'application/json': components['schemas']['SubmissionFile']
          }
        }
        /** You are not allowed to delete the requested file. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/submissions/{submissionId}/participants': {
    /** Get the participants assigned to a submisssion. */
    get: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
        }
      }
      responses: {
        /** List of users assigned to a submission */
        200: {
          content: {
            'application/json': components['schemas']['UserSummary'][]
          }
        }
        /** The requested submission could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/submissions/{submissionId}/participants/{stageId}': {
    /** Get all participants assigned to a submission for a specific workflow stage, such as the review or copyediting stage. */
    get: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
          /** Stage ID */
          stageId: number
        }
      }
      responses: {
        /** List of users assigned to the requested stage of the requested submission */
        200: {
          content: {
            'application/json': components['schemas']['UserSummary'][]
          }
        }
        /** The requested submission could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/submissions/{submissionId}/publications': {
    get: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
        }
      }
      responses: {
        /** List of publications for this submission. */
        200: {
          content: {
            'application/json': components['schemas']['Publication'][]
          }
        }
        /** The requested submission could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    /** Create a new publication for a submission. */
    post: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
          /** Publication ID */
          publicationId: number
        }
      }
      responses: {
        /** Details of the publication that was just added. */
        200: {
          content: {
            'application/json': components['schemas']['Publication']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
      }
      /** Details about the publication that should be created. */
      requestBody: {
        content: {
          'application/json': components['schemas']['PublicationEditable']
        }
      }
    }
  }
  '/submissions/{submissionId}/publications/{publicationId}': {
    get: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
          /** Publication ID */
          publicationId: number
        }
      }
      responses: {
        /** The publication details */
        200: {
          content: {
            'application/json': components['schemas']['Publication']
          }
        }
        /** The requested submission or publication could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    put: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
          /** Publication ID */
          publicationId: number
        }
      }
      responses: {
        /** The publication that was just edited with the new values after the update has occurred. */
        200: {
          content: {
            'application/json': components['schemas']['Publication']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
        /**
         * This error indicates one of the following:
         * * The publication you want to edit does not belong to this submission.
         * * This publication is published and can not be edited. You must create and publish a new version.
         * * You do not have permission to edit this publication.
         * * You are not allowed to modify the `status` of a publication. You must use the `/submissions/{submissionId}/publications/{publicationId}/publish` and `.../unpublish` endpoints to modify the status of a publication.
         */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The publication could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
      /** The details about the publication that you want to edit. All params are optional. When a param is omitted, the existing value of that param will not be modified. */
      requestBody: {
        content: {
          'application/json': components['schemas']['PublicationEditable']
        }
      }
    }
    /** Only journal managers and subeditors can make a request to this endpoint. */
    delete: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
          /** Publication ID */
          publicationId: number
        }
      }
      responses: {
        /** The publication that was just deleted. */
        200: {
          content: {
            'application/json': components['schemas']['Publication']
          }
        }
        /**
         * This may mean one of the following:
         * * You are not allowed to delete this publication.
         * * The publication does not belong to this submission.
         * * This publication is published and can not be deleted.
         */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The submission could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/submissions/{submissionId}/publications/{publicationId}/version': {
    /** Duplicate a publication, including author and galley records, in order to create a new version of a publication that can be edited. */
    post: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
          /** Publication ID */
          publicationId: number
        }
      }
      responses: {
        /** Details of the new publication that was created. */
        200: {
          content: {
            'application/json': components['schemas']['Publication']
          }
        }
        /** The publication you want to version does not belong to this submission. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The publication could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/submissions/{submissionId}/publications/{publicationId}/publish': {
    /**
     * If the publication is assigned to an issue that is not yet published, it will be scheduled for publication and the `status` will be set to `STATUS_SCHEDULED`. If the issue is already published, it will be published immediately and the `status` will be set to `STATUS_PUBLISHED`.
     *
     * The publication will be validated against any publishing requirements before it is published and a `400` response will be returned if it fails validation.
     */
    put: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
          /** Publication ID */
          publicationId: number
        }
      }
      responses: {
        /** Details of the publication that was just published. */
        200: {
          content: {
            'application/json': components['schemas']['Publication']
          }
        }
        /** One or more publication requirements have not been met. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
        /** A 403 response means that the publication you want to version does not belong to this submission or that the publication is already published. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The publication could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/submissions/{submissionId}/publications/{publicationId}/unpublish': {
    put: {
      parameters: {
        path: {
          /** Submission ID */
          submissionId: number
          /** Publication ID */
          publicationId: number
        }
      }
      responses: {
        /** Details of the publication that was just unpublished. */
        200: {
          content: {
            'application/json': components['schemas']['Publication']
          }
        }
        /** A 403 response means that the publication you want to version does not belong to this submission or that the publication is already unpublished. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The publication could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/issues': {
    /** Results are eordered by `datePublished`. */
    get: {
      parameters: {
        query: {
          /** How many results to return in a single request. Max is `100`. */
          count?: number
          /** Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`. */
          offset?: number
          /** Order the results returned. */
          orderBy?: 'datePublished' | 'lastModified' | 'seq'
          /** Return the results in ascending or descending order. */
          orderDirection?: 'ASC' | 'DESC'
          /** Filter returned issues by those that have been published. Pass a `false` value to return only unpublished issues. Only administrators and journal managers are allowed to access unpublished issues. */
          isPublished?: boolean
          /** Filter returned issues by those in a specific volume. */
          volumes?: string
          /** Filter returned issues by those assigned a specific number. */
          numbers?: string
          /** Filter returned issues by those in a specific year. */
          years?: string
          /** Filter the results by a search phrase matched against the title, description and year. It will also attempt to match search phrases using the localised issue identification. For example, in English a search for `Vol. 1 No. 2 (2018)` will match an issue with a volume of `1`, a number of `2` and a year of `2018`. The precise format differs for each language. */
          searchPhrase?: string
        }
      }
      responses: {
        /** List of issues. */
        200: {
          content: {
            'application/json': components['schemas']['IssueSummary'][]
          }
        }
        /** The requested volume, number or year is not valid. */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/issues/current': {
    get: {
      responses: {
        /** The current issue. */
        200: {
          content: {
            'application/json': components['schemas']['Issue']
          }
        }
        /** This journal does not have a current issue. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/issues/{issueId}': {
    /** If the issue has a custom section order, the `seq` property of each `SectionSummary` will reflect the sequence for that issue. */
    get: {
      parameters: {
        path: {
          /** Issue ID */
          issueId: number
        }
      }
      responses: {
        /** The requested issue. */
        200: {
          content: {
            'application/json': components['schemas']['Issue']
          }
        }
        /** The requested issue could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/users': {
    get: {
      parameters: {
        query: {
          /** Filter the results by those who have one of these user role IDs. */
          roleIds?: number[]
          /** Filter results by active/disabled users. */
          status?: 'active' | 'disabled' | 'all'
          /** Filter results by those assigned to this submission ID. */
          assignedToSubmission?: number
          /** Filter results by those assigned to this submission stage. Will be ignored if no `assignedToSubmission` parameter exists. */
          assignedToSubmissionStage?: number
          /** Filter the results by those assigned as section editors to this section ID. */
          assignedToSection?: number
          /** How many results to return in a single request. Max is `100`. */
          count?: number
          /** Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`. */
          offset?: number
          /** Order the results returned. */
          orderBy?: 'id' | 'familyName' | 'givenName'
          /** Return the results in ascending or descending order. */
          orderDirection?: 'ASC' | 'DESC'
          /** Filter the results by a search phrase matched against the `userName`, `givenName`, `familyName`, `email`, `affiliation`, `biography` and `orcid`. */
          searchPhrase?: string
        }
      }
      responses: {
        /** A list of users. */
        200: {
          content: {
            'application/json': {
              itemsMax?: number
              items?: components['schemas']['UserSummary'][]
            }
          }
        }
        /** Only administrators, journal managers and editors are allowed to access users on this site. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/users/{userId}': {
    get: {
      parameters: {
        path: {
          /** User ID */
          userId: number
        }
      }
      responses: {
        /** User details. */
        200: {
          content: {
            'application/json': components['schemas']['User']
          }
        }
      }
    }
  }
  '/users/reviewers': {
    get: {
      parameters: {
        query: {
          /** Filter results by active/disabled users. */
          status?: 'active' | 'disabled' | 'all'
          /** Filter results by those who have an average review assignment rating of at least `X` (valid ratings are between `1` and `5`). */
          reviewerRating?: number
          /** Filter results by reviewers for one of the review stages in the workflow. Must be one of `WORKFLOW_STAGE_ID_INTERNAL_REVIEW` or `WORKFLOW_STAGE_ID_EXTERNAL_REVIEW`. In OJS, the review stage is `WORKFLOW_STAGE_ID_EXTERNAL_REVIEW`. */
          reviewStage?: number
          /** Filter results by those who have completed at least `X` reviews. You can also pass a range as a string formatted as `X-X`. */
          reviewsCompleted?: string
          /** Filter results by those who have `X` review assignments currently in progress. You can also pass a range as a string formatted as `X-X`. */
          reviewsActive?: string
          /** Filter results by those who's last review was assigned at least `X` days ago. You can also pass a range as a string formatted as `X-X`. */
          daysSinceLastAssignment?: string
          /** Filter results by those who complete a review assignment within `X` days on average. */
          averageCompletion?: number
          /** How many results to return in a single request. Max is `100`. */
          count?: number
          /** Offset the results returned. Use this to receive subsequent pages of requests. A `count` of `10` and `offset` of `15` will return results `15` to `25`. */
          offset?: number
          /** Order the results returned. */
          orderBy?: 'id' | 'familyName' | 'givenName'
          /** Return the results in ascending or descending order. */
          orderDirection?: 'ASC' | 'DESC'
          /** Filter the results by a search phrase matched against the `userName`, `givenName`, `familyName`, `email`, `affiliation`, `biography`, `orcid`, `interests`, and `gossip`. */
          searchPhrase?: string
        }
      }
      responses: {
        /** List of reviewers. */
        200: {
          content: {
            'application/json': {
              itemsMax?: number
              items?: components['schemas']['ReviewerSummary'][]
            }
          }
        }
        /** Only administrators, journal managers and editors are allowed to access users on this site. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/contexts': {
    /** Get an array of the journals (OJS), presses (OMP) or preprint servers (OPS) hosted on this site. */
    get: {
      parameters: {
        query: {
          /** Filter results by enabled/disabled contexts. Any truthy or falsey value will get enabled/disabled contexts. Leave this parameter out to get all contexts. */
          isEnabled?: string
          /** How many results to return in a single request. Max is `100`. */
          count?: unknown
          /** Offset the results returned. Use this to receive subsequent pages of requests. */
          offset?: number
          /** Filter results by a search phrase matched against the `name`, `description`, `acronym`, or `abbreviation`. */
          searchPhrase?: string
        }
      }
      responses: {
        /** List of contexts. */
        200: {
          content: {
            'application/json': {
              itemsMax?: number
              items?: components['schemas']['ContextSummary'][]
            }
          }
        }
        /** You do not have permission to view disabled contexts. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    /** Create a new journal (OJS), press (OMP) or preprint server (OPS). */
    post: {
      responses: {
        /** Details of the context that was just added. */
        200: {
          content: {
            'application/json': components['schemas']['Context']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
      }
      /** Details about the context that should be created. The `path` field is required. The `name` is required in the site's primary locale. */
      requestBody: {
        content: {
          'application/json': components['schemas']['ContextEditable']
        }
      }
    }
  }
  '/contexts/{contextId}': {
    get: {
      parameters: {
        path: {
          /** Context ID */
          contextId: number
        }
      }
      responses: {
        /** Context details. Some details may be withheld if you are not a site admin or manager of that context. */
        200: {
          content: {
            'application/json': components['schemas']['Context']
          }
        }
        /** You do not have permission to view this context. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested context could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    /** Edit a journal (OJS), press (OMP) or preprint server (OPS). */
    put: {
      parameters: {
        path: {
          /** Context ID */
          contextId: number
        }
      }
      responses: {
        /** The context that was just edited with the current values after the edit has occurred. */
        200: {
          content: {
            'application/json': components['schemas']['Context']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
        /** There are two possible conditions that will result in a `403` response. 1. You do not have permission to edit this context. 2. You submitted changes for one context from the API endpoint of another context. To edit a context, you must make a request to that context's API endpoint or the site-wide API endpoint. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested context could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
      /** The details about a context that you want to edit. All params are optional. When a param is omitted, the existing value of that param will not be modified. */
      requestBody: {
        content: {
          'application/json': components['schemas']['ContextEditable']
        }
      }
    }
    /** Delete a journal (OJS), press (OMP) or preprint server (OPS). */
    delete: {
      parameters: {
        path: {
          /** Context ID */
          contextId: number
        }
      }
      responses: {
        /** Details of the context that was just deleted. */
        200: {
          content: {
            'application/json': components['schemas']['Context']
          }
        }
        /** You do not have permission to delete this context. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested context could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/contexts/{contextId}/theme': {
    /** Get the active theme and theme options for any journal (OJS), press (OMP) or preprint server (OPS). */
    get: {
      parameters: {
        path: {
          /** Context ID */
          contextId: number
        }
      }
      responses: {
        /** The response will include the theme plugin directory in `themePluginPath`. Any theme options will be provided in additional keys based on the option name. */
        200: {
          content: {
            'application/json': components['schemas']['ThemeOptions']
          }
        }
        /** You do not have permission to view this context. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested context could not be found. A 404 may also be returned when a context has no active theme, or the active theme plugin has not been installed or enabled. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    /** Edit the active theme and theme options for any journal (OJS), press (OMP) or preprint server (OPS). */
    put: {
      parameters: {
        path: {
          /** Context ID */
          contextId: number
        }
      }
      responses: {
        /** The new theme and values for any of its theme options. */
        200: {
          content: {
            'application/json': components['schemas']['ThemeOptions']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
        /** There are two possible conditions that will result in a `403` response. 1. You do not have permission to edit this context. 2. You submitted changes for one context from the API endpoint of another context. To edit a context, you must make a request to that context's API endpoint or the site-wide API endpoint. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested context could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
      requestBody: components['requestBodies']['ThemeOptions']
    }
  }
  '/site': {
    get: {
      responses: {
        /** Site settings. */
        200: {
          content: {
            'application/json': components['schemas']['Site']
          }
        }
      }
    }
    put: {
      responses: {
        /** The site details with the current values after the edit has occurred. */
        200: {
          content: {
            'application/json': components['schemas']['Site']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
      }
      /** The details about the site that you want to edit. All params are optional. When a param is omitted, the existing value of that param will not be modified. */
      requestBody: {
        content: {
          'application/json': components['schemas']['SiteEditable']
        }
      }
    }
  }
  '/site/theme': {
    /** Get the active theme and theme options for the site. */
    get: {
      responses: {
        /** The response will include the theme plugin directory in `themePluginPath`. Any theme options will be provided in additional keys based on the option name. */
        200: {
          content: {
            'application/json': components['schemas']['ThemeOptions']
          }
        }
        /** Details about the active theme could not be found. This can occur when the active theme plugin is not installed or enabled. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    /** Get the active theme and theme options for the site. */
    put: {
      responses: {
        /** The new theme and values for any of its theme options. */
        200: {
          content: {
            'application/json': components['schemas']['ThemeOptions']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
      }
      requestBody: components['requestBodies']['ThemeOptions']
    }
  }
  '/announcements': {
    get: {
      parameters: {
        query: {
          /** How many results to return in a single request. */
          count?: unknown
          /** Offset the results returned. Use this to receive subsequent pages of requests. */
          offset?: number
          /** Filter results by a search phrase matched against the `title`, `descriptionShort`, and `description`. */
          searchPhrase?: string
          /** Filter results by announcements of these announcement types. */
          typeIds?: number[]
        }
      }
      responses: {
        /** List of announcements. */
        200: {
          content: {
            'application/json': {
              itemsMax?: number
              items?: components['schemas']['AnnouncementSummary'][]
            }
          }
        }
        /** You do not have permission to view announcements in this context. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    /** Create and publish a new announcement in this context. */
    post: {
      responses: {
        /** Details of the announcement that was just added. */
        200: {
          content: {
            'application/json': components['schemas']['Announcement']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
      }
      /** Details about the announcement that should be created. */
      requestBody: {
        content: {
          'application/json': components['schemas']['AnnouncementEditable']
        }
      }
    }
  }
  '/announcements/{announcementId}': {
    get: {
      parameters: {
        path: {
          /** Announcement ID */
          announcementId: number
        }
      }
      responses: {
        /** Announcement details. */
        200: {
          content: {
            'application/json': components['schemas']['Announcement']
          }
        }
        /** You do not have permission to view this announcement. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested announcement could not be found. Or you requested an announcement that is not part of this context. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    /** Edit an announcement. */
    put: {
      parameters: {
        path: {
          /** Announcement ID */
          announcementId: number
        }
      }
      responses: {
        /** The announcement that was just edited with the current values after the edit has occurred. */
        200: {
          content: {
            'application/json': components['schemas']['Announcement']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
        /** You do not have permission to edit this announcement. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested announcement could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
      /** The details about the announcement that you want to edit. All params are optional. When a param is omitted, the existing value of that param will not be modified. */
      requestBody: {
        content: {
          'application/json': components['schemas']['AnnouncementEditable']
        }
      }
    }
    /** Delete an announcement. */
    delete: {
      parameters: {
        path: {
          /** Announcement ID */
          announcementId: number
        }
      }
      responses: {
        /** Details of the announcement that was just deleted. */
        200: {
          content: {
            'application/json': components['schemas']['Announcement']
          }
        }
        /** You do not have permission to delete this announcement. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested announcement could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/emailTemplates': {
    get: {
      parameters: {
        query: {
          /** Filter results by enabled/disabled email templates. Any truthy or falsey value will get enabled/disabled email templates. */
          isEnabled?: string
          /** Filter results by those with or without a default template. A truthy value will return only templates with a key that does not match one of the default templates. A falsey value will return only templates with a key that matches one of the default templates. Note that a default template may be customized, but this does not qualify for `isCustom`. Only completely custom templates, not a customization of a default template, will be returned when `isCustom` is `true`. */
          isCustom?: string
          /** Filter results by email templates sent by one or more role IDs. */
          fromRoleIds?: number[]
          /** Filter results by email templates received by one or more role IDs. */
          toRoleIds?: number[]
          /** Filter results by a search phrase matched against the `key`, `subject`, `body`, or `description`. */
          searchPhrase?: string
          /** Filter results by email templates that belong to one or more workflow stage IDs. Pass `0` to return templates not assigned to a stage. */
          stageIds?: number[]
        }
      }
      responses: {
        /** List of email templates. */
        200: {
          content: {
            'application/json': {
              itemsMax?: number
              items?: components['schemas']['EmailTemplateSummary'][]
            }
          }
        }
        /** You do not have permission to view email templates. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    post: {
      responses: {
        /** Details of the email template that was just added. */
        200: {
          content: {
            'application/json': components['schemas']['EmailTemplate']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
      }
      /** Details about the email template that should be created. */
      requestBody: {
        content: {
          'application/json': components['schemas']['EmailTemplateEditable']
        }
      }
    }
  }
  '/emailTemplates/{key}': {
    /** Email templates are fetched by their key, rather than ID, so that a default template is retrieved if it has not been customized. See the [documentation](https://docs.pkp.sfu.ca/dev/documentation/en/email-templates). */
    get: {
      parameters: {
        path: {
          /** Email template key */
          key: number
        }
      }
      responses: {
        /** Email template details. */
        200: {
          content: {
            'application/json': components['schemas']['EmailTemplate']
          }
        }
        /** You do not have permission to view email templates. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested email template could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
    put: {
      parameters: {
        path: {
          /** Email template key */
          key: number
        }
      }
      responses: {
        /** The email template that was just edited with the current values after the edit has occurred. */
        200: {
          content: {
            'application/json': components['schemas']['EmailTemplate']
          }
        }
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
        /** There are two possible conditions that will result in a `403` response. 1. You do not have permission to edit this email template. 2. You are an admin and you submitted changes for an email template in one context from the API endpoint of another context. To edit an email template, you must make a request to the API endpoint of that email template's context. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested email template could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
      /** The details about the email template that you want to edit. All params are optional. When a param is omitted, the existing value of that param will not be modified. */
      requestBody: {
        content: {
          'application/json': components['schemas']['EmailTemplateEditable']
        }
      }
    }
    /** Default templates that have not been modified can not be deleted. */
    delete: {
      parameters: {
        path: {
          /** Email template key */
          key: number
        }
      }
      responses: {
        /** Details of the email template that was just deleted. */
        200: {
          content: {
            'application/json': components['schemas']['EmailTemplate']
          }
        }
        /** You do not have permission to delete this email template. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested email template could not be found. This will be returned if you try to delete a default email template that has not been modified. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/emailTemplates/restoreDefaults': {
    /** Delete custom templates and reset all templates to their default settings. */
    delete: {
      responses: {
        /** A list of template keys which were deleted or reset. */
        200: {
          content: {
            'application/json': string[]
          }
        }
      }
    }
  }
  '/stats/editorial': {
    /** Returns information about editorial activity such as the number of submissions accepted and declined, the number of days to reach editorial decisions, and the acceptance and rejection rates. */
    get: {
      parameters: {
        query: {
          /** Return stats after this date. */
          dateStart?: string
          /** Return stats before this date. */
          dateEnd?: string
          /** Filter results by submissions to these sections. */
          sectionIds?: number[]
        }
      }
      responses: {
        /** An array containing the requested stats. The `name` may change with translation but the `key` will be a reliable, unique identifier for the statistic. */
        200: {
          content: {
            'application/json': unknown[]
          }
        }
        /** Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter. */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** You do not have permission to access editorial statistics for this journal or press. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested resource was not found. This should only occur if the API is requested without specifying the context. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/stats/editorial/averages': {
    /** Returns yearly averages of editorial activity. To ensure averages are calculated fairly, partial years are not included in the averages. For example, if the first submission was received in October 2017 and the last submission was received in the current calendar year, only submissions from 2018 up until the end of the previous calendar year will be used to calculate the average. */
    get: {
      parameters: {
        query: {
          /** Filter results by submissions to these sections. */
          sectionIds?: number[]
        }
      }
      responses: {
        /** An object containing the requested averages. Each property matches one of the properties from `/stats/editorial`. The value `-1` may be returned for a property if an average can not be calculated. This can occur if there is not a full calendar year of activity to average. */
        200: {
          content: {
            'application/json': unknown[]
          }
        }
        /** You do not have permission to access editorial statistics for this journal or press. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested resource was not found. This should only occur if the API is requested without specifying the context. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/stats/publications': {
    /** Returns a list of publications ordered by their total abstract views. Includes total views by abstract, all galleys, PDF galleys, HTML galleys and other galleys. */
    get: {
      parameters: {
        query: {
          /** Return stats for publications after this date. */
          dateStart?: string
          /** Return stats for publications before this date. */
          dateEnd?: string
          /** Filter results by publications in these sections. */
          sectionIds?: string
          /** Filter results by these submissions. */
          submissionIds?: number[]
          /** Filter results by publications that match this search phrase. Searches the same submission properties as the `searchPhrase` parameter in the `/submissions` endpoint. */
          searchPhrase?: string
          /** How many publications to return in a single request. Max is `100`. */
          count?: unknown
          /** Offset the publications returned. Use this to receive subsequent pages of requests. */
          offset?: number
          /** Return the results in ascending or descending order. */
          orderDirection?: 'ASC' | 'DESC'
        }
      }
      responses: {
        /** A list of publications with their total stats during the requested period. */
        200: {
          content: {
            'application/json': components['schemas']['PublicationStats'][]
          }
        }
        /** Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter. */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** You do not have permission to access statistics for this journal or press. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested resource was not found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/stats/publications/abstract': {
    /** Returns a monthly or daily timeline of abstract views for the publications which match the request parameters. */
    get: {
      parameters: {
        query: {
          /** Return the total daily or monthly views */
          timelineInterval?: 'day' | 'month'
          /** Return stats for publications after this date. */
          dateStart?: string
          /** Return stats for publications before this date. */
          dateEnd?: string
          /** Filter results by publications in these sections. */
          sectionIds?: number[]
          /** Filter results by these submissions. */
          submissionIds?: number[]
          /** Filter results by publications that match this search phrase. Searches the same submission properties as the `searchPhrase` parameter in the `/submissions` endpoint. */
          searchPhrase?: string
        }
      }
      responses: {
        /** A list of days or months with the total stats for that day or month. */
        200: {
          content: {
            'application/json': components['schemas']['TimelineInterval'][]
          }
        }
        /** Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter. */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** You do not have permission to access statistics for this journal or press. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested resource was not found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/stats/publications/galley': {
    /** Returns a monthly or daily timeline of galley views for the publications which match the request parameters. */
    get: {
      parameters: {
        query: {
          /** Return the total daily or monthly views. */
          timelineInterval?: 'day' | 'month'
          /** Return stats for publications after this date. */
          dateStart?: string
          /** Return stats for publications before this date. */
          dateEnd?: string
          /** Filter results by publications in these sections. */
          sectionIds?: number[]
          /** Filter results by these publications. */
          submissionIds?: number[]
          /** Filter results by publications that match this search phrase. Searches the same submission properties as the `searchPhrase` parameter in the `/submissions` endpoint. */
          searchPhrase?: string
        }
      }
      responses: {
        /** A list of days or months with the total stats for that day or month. */
        200: {
          content: {
            'application/json': components['schemas']['TimelineInterval'][]
          }
        }
        /** Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter. */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** You do not have permission to access statistics for this journal or press. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested resource was not found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/stats/publications/{submissionId}': {
    /** Returns a publication's total views by abstract, all galleys, PDF galleys, HTML galleys and other galleys. */
    get: {
      parameters: {
        query: {
          /** Return stats for publications after this date. */
          dateStart?: string
          /** Return stats for publications before this date. */
          dateEnd?: string
        }
      }
      responses: {
        /** The total stats for the publication during the period requested. */
        200: {
          content: {
            'application/json': components['schemas']['PublicationStats']
          }
        }
        /** Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter. */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** You do not have permission to access statistics for this journal or press. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested resource was not found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/stats/publications/{submissionId}/abstract': {
    /** Returns a monthly or daily timeline of abstract views for the requested publication. */
    get: {
      parameters: {
        query: {
          /** Return the total daily or monthly views */
          timelineInterval?: 'day' | 'month'
          /** Return stats for publications after this date. */
          dateStart?: string
          /** Return stats for publications before this date. */
          dateEnd?: string
        }
      }
      responses: {
        /** A list of days or months with the total stats for that day or month. */
        200: {
          content: {
            'application/json': components['schemas']['TimelineInterval'][]
          }
        }
        /** Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter. */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** You do not have permission to access statistics for this journal or press. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested resource was not found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/stats/publications/{submissionId}/galley': {
    /** Returns a monthly or daily timeline of galley views for the requested publication. */
    get: {
      parameters: {
        query: {
          /** Return the total daily or monthly views. */
          timelineInterval?: 'day' | 'month'
          /** Return stats for publications after this date. */
          dateStart?: string
          /** Return stats for publications before this date. */
          dateEnd?: string
        }
      }
      responses: {
        /** A list of days or months with the total stats for that day or month. */
        200: {
          content: {
            'application/json': components['schemas']['TimelineInterval'][]
          }
        }
        /** Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter. */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** You do not have permission to access statistics for this journal or press. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested resource was not found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/stats/users': {
    /**
     * Returns a count of the number of user registrations broken down by roles.
     *
     * Please note when using the `registeredBefore` and `registeredAfter` parameters that role counts reflect current user roles.
     *
     * A user who registered as an author in January, 2019 but was later appointed to subeditor will be counted as a subeditor when the registration date range includes January, 2019.
     */
    get: {
      parameters: {
        query: {
          /** Return counts reflecting users who registered after this date. */
          registeredAfter?: string
          /** Return counts reflecting users who registered before this date. */
          registeredBefore?: string
          /** Count `active` or `disabled` users. Default: `active`. */
          status?: 'active' | 'disabled'
        }
      }
      responses: {
        /** An object containing the requested stats. The `id` relects the `ROLE_ID_*` constant in the application. */
        200: {
          content: {
            'application/json': unknown[]
          }
        }
        /** Your request was not valid. One or more of the request parameters will be invalid. The error message will contain details about the invalid parameter. */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** You do not have permission to access user statistics for this journal or press. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The requested resource was not found. This should only occur if the API is requested without specifying the context. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/vocabs': {
    get: {
      parameters: {
        query: {
          /** The type of controlled vocab you want to retrieve entries for. One of `CONTROLLED_VOCAB_*`. */
          vocab: string
          /** The locale key, such as `en_US`, you want to retrieve entries for. If no `locale` is provided, entries will be provided in the user's current locale or fall back to the journal's primary locale. */
          locale?: string
        }
      }
      responses: {
        /** A list of the entries available in this journal. */
        200: {
          content: {
            'application/json': string[]
          }
        }
        /** The `locale` that you requested is not supported in this journal. */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The journal you requested could not be found. */
        404: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
    }
  }
  '/temporaryFiles': {
    /** Upload a file to the temporary file storage area and receive a temporary file ID. */
    post: {
      responses: {
        /** The temporary file ID to use in other API requests. */
        200: {
          content: {
            'application/json': {
              id?: number
            }
          }
        }
        /** No uploaded file could be found. */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
      /** Use any parameter key to upload your file. The API endpoint will retrieve the first uploaded file. */
      requestBody: {
        content: {
          'application/json': unknown
        }
      }
    }
    /** Responds with the appopriate headers to indicate file uploads maybe be sent, required by some file upload utilities which send a preflight request. */
    options: {
      responses: {
        /** An empty response body. */
        200: unknown
      }
    }
  }
  '/_payments': {
    /** This endpoint is used on the settings page to save payment plugin settings alongside the general journal settings for enabling payments and setting the currency. */
    put: {
      responses: {
        /** The parameters you submitted */
        200: unknown
        /** The values you sent with the request did not pass validation. The response will contain information about which parameters failed validation. */
        400: {
          content: {
            'application/json': components['schemas']['InvalidParametersResponse']
          }
        }
      }
      /** None of these properties are required. In addition to `paymentsEnabled` and `currency`, you may pass any property that corresponds with a setting for an enabled `paymethod` plugin. */
      requestBody: {
        content: {
          'application/json': {
            paymentsEnabled?: boolean
            currency?: string
            '...'?: string
          }
        }
      }
    }
  }
  '/_uploadPublicFile': {
    /** The user's public file directory supports files uploaded through the TinyMCE rich text editor. This is commonly used in context settings but is also available to all registered users through their profile biography. */
    post: {
      responses: {
        /** An object containing the URL to the uploaded file. */
        200: {
          content: {
            'application/json': {
              url?: string
            }
          }
        }
        /**
         * One of the following errors occurred.
         * * No uploaded file could be found.
         * * This file type is not supported.
         * * The file you uploaded identifies itself as an image but it is not a valid image.
         * * The mime-type did not match the file extension.
         * * The file is too large.
         * * The server configuration could not support this file upload because there is no temporary directory, it doesn't have permission to write to the directory, or a PHP extension stopped the file upload.
         *
         * The error message will contain further details.
         */
        400: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** You do not have permission to upload this public file. */
        403: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The upload failed for an unknown reason. */
        409: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** Your user file directory is full. */
        413: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
        /** The server is unable to read or write to the public files directory. */
        500: {
          content: {
            'application/json': components['schemas']['ErrorResponse']
          }
        }
      }
      /** Use the `file` key to upload your file. */
      requestBody: {
        content: {
          'application/json': unknown
        }
      }
    }
    /** Responds with the appopriate headers to indicate file uploads maybe be sent, required by some file upload utilities which send a preflight request. */
    options: {
      responses: {
        /** An empty response body. */
        200: unknown
      }
    }
  }
  '/_submissions': {
    /** This endpoint delivers a little bit of extra information about each submission that is used in the submissions list. This private endpoint saves a few extra HTTP requests, but it is more database-intensive for each query. */
    get: {
      parameters: {}
      responses: {
        /** List of submissions. */
        200: unknown
      }
    }
  }
}

export interface components {
  schemas: {
    Announcement: {
      /**
       * Format: uri
       * @description The URL to this announcement in the REST API.
       */
      _href?: string
      /** @description The journal, press or preprint server ID. */
      assocId?: number
      /** @description The assoc object. This should always be `ASSOC_TYPE_JOURNAL` (OJS), `ASSOC_TYPE_PRESS` (OMP) or `ASSOC_TYPE_SERVER` (OPS). */
      assocType?: number
      /** @description (Optional) The date that this announcement expires, if one is set. This is typically used to express closing dates for calls for papers. */
      dateExpire?: string
      /** @description The date this announcement was posted. */
      datePosted?: string
      description?: components['schemas']['LocaleObject']
      descriptionShort?: components['schemas']['LocaleObject']
      id?: number
      title?: components['schemas']['LocaleObject']
      /** @description (Optional) One of the announcement type ids. */
      typeId?: number
    }
    Author: {
      affiliation?: components['schemas']['LocaleObject']
      biography?: components['schemas']['LocaleObject']
      country?: string
      email?: string
      familyName?: components['schemas']['LocaleObject']
      givenName?: components['schemas']['LocaleObject']
      id?: number
      /**
       * @description Whether or not to include this contributor in author lists when the publication appears in search results, tables of content and catalog entries.
       * @default true
       */
      includeInBrowse?: boolean
      /** @description The ORCID of this contributor. See: https://orcid.org/ */
      orcid?: string
      preferredPublicName?: components['schemas']['LocaleObject']
      publicationId?: number
      /** @description The order in which this contributor should appear in a list of contriibutors. */
      seq?: number
      /** @description The primary locale of the submission this author is attached to. This locale is used as the fallback when a language is missing from a multilingual property. */
      submissionLocale?: string
      /** @description An optional URL to this contributor's webpage. */
      url?: string
      /** @description in which user group should this contributor be identified. Usually one of the author roles, such as Author or Translator. */
      userGroupId?: number
    }
    Context: {
      /** Format: uri */
      _href?: string
      abbreviation?: components['schemas']['LocaleObject']
      about?: components['schemas']['LocaleObject']
      acronym?: components['schemas']['LocaleObject']
      additionalHomeContent?: components['schemas']['LocaleObject']
      /** @description Enable agencies metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      agencies?: string
      announcementsIntroduction?: components['schemas']['LocaleObject']
      authorGuidelines?: components['schemas']['LocaleObject']
      authorInformation?: components['schemas']['LocaleObject']
      /** @description Enable citations metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      citations?: string
      clockssLicense?: components['schemas']['LocaleObject']
      competingInterests?: components['schemas']['LocaleObject']
      contactAffiliation?: components['schemas']['LocaleObject']
      contactEmail?: string
      contactName?: string
      contactPhone?: string
      copyrightHolderOther?: components['schemas']['LocaleObject']
      copyrightHolderType?: string
      copyrightNotice?: components['schemas']['LocaleObject']
      /** @default issue */
      copyrightYearBasis?: string
      /** @description Enable coverage metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      coverage?: string
      currency?: string
      customHeaders?: components['schemas']['LocaleObject']
      dateFormatLong?: components['schemas']['LocaleObject']
      dateFormatShort?: components['schemas']['LocaleObject']
      datetimeFormatLong?: components['schemas']['LocaleObject']
      datetimeFormatShort?: components['schemas']['LocaleObject']
      defaultMetricType?: string
      /** @default 2 */
      defaultReviewMode?: number
      delayedOpenAccessDuration?: number
      delayedOpenAccessPolicy?: components['schemas']['LocaleObject']
      description?: components['schemas']['LocaleObject']
      /** @description User groups that a manager will be prevented from sending bulk email to using the notify feature. Only the admin may edit this property. */
      disableBulkEmailUserGroups?: number[]
      /** @default false */
      disableSubmissions?: boolean
      disableUserReg?: boolean
      /** @description Enable disciplines metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      disciplines?: string
      editorialTeam?: components['schemas']['LocaleObject']
      emailSignature?: string
      enableAnnouncements?: boolean
      enableClockss?: boolean
      enableLockss?: boolean
      /** @default 1 */
      enableOai?: boolean
      enableOpenAccessNotification?: boolean
      enablePublisherId?: string[]
      enableSubscriptionOnlinePaymentNotificationPurchaseIndividual?: boolean
      enableSubscriptionOnlinePaymentNotificationPurchaseInstitutional?: boolean
      enableSubscriptionOnlinePaymentNotificationRenewIndividual?: boolean
      enableSubscriptionOnlinePaymentNotificationRenewInstitutional?: boolean
      enabled?: boolean
      envelopeSender?: string
      favicon?: {
        type?: unknown
        properties?: unknown
        en_US?: {
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
        fr_CA?: {
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
      }
      homepageImage?: {
        type?: unknown
        properties?: unknown
        en_US?: {
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
        fr_CA?: {
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
      }
      id?: number
      /** @default 25 */
      itemsPerPage?: number
      journalThumbnail?: {
        type?: unknown
        properties?: unknown
        en_US?: {
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
        fr_CA?: {
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
      }
      /**
       * @description Enable keywords metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission.
       * @default request
       */
      keywords?: string
      /** @description Enable languages metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      languages?: string
      librarianInformation?: components['schemas']['LocaleObject']
      licenseTerms?: components['schemas']['LocaleObject']
      licenseUrl?: string
      lockssLicense?: components['schemas']['LocaleObject']
      mailingAddress?: string
      /** @default 0 */
      membershipFee?: number
      membershipFeeDescription?: components['schemas']['LocaleObject']
      membershipFeeName?: components['schemas']['LocaleObject']
      name?: components['schemas']['LocaleObject']
      numAnnouncementsHomepage?: number
      numDaysBeforeInviteReminder?: number
      numDaysBeforeSubmitReminder?: number
      numMonthsAfterSubscriptionExpiryReminder?: number
      numMonthsBeforeSubscriptionExpiryReminder?: number
      /** @default 10 */
      numPageLinks?: number
      numWeeksAfterSubscriptionExpiryReminder?: number
      numWeeksBeforeSubscriptionExpiryReminder?: number
      /** @default 4 */
      numWeeksPerResponse?: number
      /** @default 4 */
      numWeeksPerReview?: number
      onlineIssn?: string
      openAccessPolicy?: components['schemas']['LocaleObject']
      pageFooter?: components['schemas']['LocaleObject']
      pageHeaderLogoImage?: {
        type?: unknown
        properties?: unknown
        en_US?: {
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
        fr_CA?: {
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
      }
      paymentPluginName?: string
      paymentsEnabled?: boolean
      primaryLocale?: string
      printIssn?: string
      privacyStatement?: components['schemas']['LocaleObject']
      /** @default 0 */
      publicationFee?: number
      publicationFeeDescription?: components['schemas']['LocaleObject']
      publicationFeeName?: components['schemas']['LocaleObject']
      publisherInstitution?: string
      publishingMode?: number
      /** @default 0 */
      purchaseArticleFee?: number
      purchaseArticleFeeDescription?: components['schemas']['LocaleObject']
      purchaseArticleFeeEnabled?: boolean
      purchaseArticleFeeName?: components['schemas']['LocaleObject']
      purchaseIssueFee?: number
      purchaseIssueFeeEnabled?: boolean
      rateReviewerOnQuality?: boolean
      readerInformation?: components['schemas']['LocaleObject']
      restrictArticleAccess?: boolean
      restrictOnlyPdf?: boolean
      restrictReviewerFileAccess?: boolean
      restrictSiteAccess?: boolean
      reviewGuidelines?: components['schemas']['LocaleObject']
      reviewerAccessKeysEnabled?: boolean
      /** @description Enable rights metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      rights?: string
      searchDescription?: components['schemas']['LocaleObject']
      seq?: number
      showEnsuringLink?: boolean
      sidebar?: string[]
      /** @description Enable source metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      source?: string
      styleSheet?: {
        name?: string
        uploadName?: string
        dateUploaded?: string
      }
      /** @description Enable subjects metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      subjects?: string
      /**
       * @default [
       *   {
       *     "order": 1,
       *     "content": {
       *       "defaultLocaleKey": "default.contextSettings.checklist.notPreviouslyPublished"
       *     }
       *   },
       *   {
       *     "order": 2,
       *     "content": {
       *       "defaultLocaleKey": "default.contextSettings.checklist.fileFormat"
       *     }
       *   },
       *   {
       *     "order": 3,
       *     "content": {
       *       "defaultLocaleKey": "default.contextSettings.checklist.addressesLinked"
       *     }
       *   },
       *   {
       *     "order": 4,
       *     "content": {
       *       "defaultLocaleKey": "default.contextSettings.checklist.submissionAppearance"
       *     }
       *   },
       *   {
       *     "order": 5,
       *     "content": {
       *       "defaultLocaleKey": "default.contextSettings.checklist.bibliographicRequirements"
       *     }
       *   }
       * ]
       */
      submissionChecklist?: {
        order?: number
        content?: string
      }[]
      submissionFee?: number
      submissionFeeDescription?: components['schemas']['LocaleObject']
      submissionFeeName?: components['schemas']['LocaleObject']
      subscriptionAdditionalInformation?: components['schemas']['LocaleObject']
      subscriptionEmail?: string
      subscriptionExpiryPartial?: boolean
      subscriptionMailingAddress?: string
      subscriptionName?: string
      subscriptionPhone?: string
      supportEmail?: string
      supportName?: string
      supportPhone?: string
      supportedFormLocales?: string[]
      supportedLocales?: string[]
      supportedSubmissionLocales?: string[]
      /** @default default */
      themePluginPath?: string
      timeFormat?: components['schemas']['LocaleObject']
      /** @description Enable types metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      type?: string
      url?: string
      urlPath?: string
    }
    /** @description A response object that will be returned when the request could not be fulfilled. */
    ErrorResponse: {
      error?: string
      errorMessage?: string
    }
    EmailTemplate: {
      /** Format: uri */
      _href?: string
      body?: components['schemas']['LocaleObject']
      /** @description Can this email template be disabled in the context settings area? Default is `true`. */
      canDisable?: boolean
      /** @description Can this email template be edited in the context settings area? Default is `true`. */
      canEdit?: boolean
      /** @description The ID of the context (journal/press) this email is related to. Only used for custom email templates. Default is `null`. */
      contextId?: number
      description?: components['schemas']['LocaleObject']
      /** @description Is this email template enabled? Default is `true`. */
      enabled?: boolean
      /** @description The `ROLE_ID_*` of the user who will send this email. */
      fromRoleId?: number
      /** @description The email template ID. */
      id?: number
      /** @description A unique key for this email template. */
      key?: string
      /** @description The `WORKFLOW_STAGE_ID_*` that email template is associated with or `null` if it is not associated with a stage. */
      stageId?: number
      subject?: components['schemas']['LocaleObject']
      /** @description The `ROLE_ID_*` of the user who will receive this email. */
      toRoleId?: number
    }
    Galley: {
      file?: components['schemas']['SubmissionFile']
      id?: number
      isApproved?: boolean
      /** @description A human-readable label for this galley. For the primary article, it is usually indicates the format like PDF, ePub or full text. For supplementary files it often indicates the content, such as source data or interview transcripts. */
      label?: string
      /** @description The primary locale of this galley. */
      locale?: string
      /** @description A unique ID provided by the publisher. It will be used in the publication's URL path instead of the `id` when present. */
      'pub-id::publisher-id'?: string
      publicationId?: number
      /** @description In what order this galley should appear in lists of galleys for this publication. */
      seq?: number
      submissionFileId?: number
      /** @description An optional path to use in the URL instead of the ID. */
      urlPath?: string
      /** @description The URL where this galley can be viewed or downloaded. */
      urlPublished?: string
      /** @description An optional URL where the galley can be viewed or downloaded. */
      urlRemote?: string
    }
    /**
     * @description A response object that will be returned when there are validation errors for the request parameters. Typically used with forms.
     * @example {
     *   "name": [
     *     "You must provide a name to create a new user."
     *   ],
     *   "roles": [
     *     "You must assign the user to one or more roles."
     *   ]
     * }
     */
    InvalidParametersResponse: { [key: string]: unknown }
    Issue: {
      _href?: string
      articles?: components['schemas']['SubmissionSummary'][]
      coverImageAltText?: components['schemas']['LocaleObject']
      coverImageUrl?: components['schemas']['LocaleObject']
      dateNotified?: string
      datePublished?: string
      description?: components['schemas']['LocaleObject']
      doi?: string
      galleys?: components['schemas']['Galley'][]
      id?: number
      identification?: string
      isCurrent?: boolean
      lastModified?: string
      number?: string
      publishedUrl?: string
      sections?: components['schemas']['SectionSummary'][]
      title?: components['schemas']['LocaleObject']
      /** @description An optional path to use in the URL instead of the ID. */
      urlPath?: string
      volume?: number
      year?: number
    }
    /**
     * @description Key/value pairs containing data stored by locale key.
     * @example {
     *   "en_US": "Filename",
     *   "fr_CA": "Nom de fichier"
     * }
     */
    LocaleObject: { [key: string]: unknown }
    Publication: {
      /** Format: uri */
      _href?: string
      abstract?: components['schemas']['LocaleObject']
      /** @default 0 */
      accessStatus?: number
      /** @description A list of the authors for this publication. */
      authors?: components['schemas']['Author'][]
      /** @description All of the authors rendered with the appropriate separators according to the locale. */
      authorsString?: string
      /** @description A shortened version of the authors rendered with the appropriate separators according to the locale. */
      authorsStringShort?: string
      categoryIds?: number[]
      /** @description Optional metadata that contains an array of references for works cited in this submission. References have been split and parsed from the raw text. */
      citations?: string[]
      /** @description Optional metadata that contains references for works cited in this submission as raw text. */
      citationsRaw?: string
      copyrightHolder?: components['schemas']['LocaleObject']
      /** @description The copyright year for this publication. */
      copyrightYear?: number
      coverImage?: {
        type?: unknown
        properties?: unknown
        en_US?: {
          dateUploaded?: string
          uploadName?: string
          altText?: string
        }
        fr_CA?: {
          dateUploaded?: string
          uploadName?: string
          altText?: string
        }
      }
      coverage?: components['schemas']['LocaleObject']
      datePublished?: string
      /** @description Optional metadata that describes the submission's types of study or branches of knowledge. */
      disciplines?: string[]
      fullTitle?: components['schemas']['LocaleObject']
      galleys?: components['schemas']['Galley'][]
      /**
       * @description Whether the contributor details should be displayed for this publication. Commonly used for editorial statements without individual authorship.
       * @default false
       */
      hideAuthor?: boolean
      id?: number
      issueId?: number
      /** @description Optional metadata, usually one- to three-word phrases that are used to indicate the main topics of a submission. */
      keywords?: string[]
      /** @description Optional metadata that identifies the submission's primary language. */
      languages?: string[]
      lastModified?: string
      /** @description A URL to a webpage describing the license terms for this publication. */
      licenseUrl?: string
      /** @description The primary locale of the submission this publication is attached to. This locale is used as the fallback when a language is missing from a multilingual property. */
      locale?: string
      /** @description The pages of the issue in which this article appears if it is published in a physical format. */
      pages?: string
      prefix?: components['schemas']['LocaleObject']
      /** @description Which `contributor` is the primary contact for this publication. */
      primaryContactId?: number
      /** @description A unique ID provided by the publisher. It will be used in the publication's URL path instead of the `id` when present. */
      'pub-id::publisher-id'?: string
      rights?: components['schemas']['LocaleObject']
      sectionId?: number
      /** @default 0 */
      seq?: number
      source?: components['schemas']['LocaleObject']
      /**
       * @description Whether the publication is Queued (not yet scheduled for publication), Declined, Published or Scheduled (scheduled for publication at a future date). One of the `STATUS_*` constants. Default is `STATUS_QUEUED`.
       * @default 1
       */
      status?: number
      /** @description Optional metadata that consists of keywords, key phrases or classification codes that describe the submission's topics. */
      subjects?: string[]
      submissionId?: number
      subtitle?: components['schemas']['LocaleObject']
      /** @description Optional metadata that indicates the source of research funding or other institutional support. */
      supportingAgencies?: string[]
      title?: components['schemas']['LocaleObject']
      type?: components['schemas']['LocaleObject']
      /** @description An optional path to use in the URL instead of the ID. */
      urlPath?: string
      /** @description The public URL for this publication or where it will be available if it has not yet been published. */
      urlPublished?: string
      /** @description The version number of this publication. Version numbers should increment by one so that the third publication of a submission will have the version number `3`. Version numbers should typically be set automatically and editorial staff should not be encouraged to modify them. */
      version?: number
    }
    /** @description The total abstract and galley views for a published submission. */
    PublicationStats: {
      abstractViews?: number
      galleyViews?: number
      pdfViews?: number
      htmlViews?: number
      otherViews?: number
      publication?: {
        _href?: string
        fullTitle?: components['schemas']['LocaleObject']
        id?: number
        shortAuthorString?: string
        urlPublished?: string
        urlWorkflow?: string
      }
    }
    ReviewRound: {
      id?: number
      round?: number
      stageId?: number
      status?: string
      statusId?: number
    }
    /** @description A special representation of a User assigned to a reviewer group. This model presents specific details about review activity. */
    ReviewerSummary: {
      _href?: string
      affiliation?: components['schemas']['LocaleObject']
      averageReviewCompletionDays?: number
      dateLastReviewAssignment?: string
      disabled?: boolean
      fullName?: string
      gossip?: components['schemas']['LocaleObject']
      groups?: components['schemas']['UserGroup'][]
      id?: number
      interests?: components['schemas']['UserInterest'][]
      reviewsActive?: number
      reviewsCompleted?: number
      reviewsCancelled?: number
      reviewsDeclined?: number
      userName?: string
    }
    Section: {
      abbrev?: components['schemas']['LocaleObject']
      id?: number
      seq?: number
      title?: components['schemas']['LocaleObject']
    }
    Site: {
      about?: components['schemas']['LocaleObject']
      contactEmail?: components['schemas']['LocaleObject']
      contactName?: components['schemas']['LocaleObject']
      /** @description Which hosted journals, presses or preprint servers are allowed to send bulk emails. */
      enableBulkEmails?: number[]
      installedLocales?: string[]
      minPasswordLength?: number
      pageFooter?: components['schemas']['LocaleObject']
      pageHeaderTitleImage?: {
        type?: unknown
        properties?: unknown
        en_US?: {
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
        fr_CA?: {
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
      }
      primaryLocale?: string
      privacyStatement?: components['schemas']['LocaleObject']
      redirect?: number
      sidebar?: string[]
      styleSheet?: {
        name?: string
        uploadName?: string
        dateUploaded?: string
      }
      supportedLocales?: string[]
      /** @default default */
      themePluginPath?: string
      title?: components['schemas']['LocaleObject']
    }
    Submission: {
      _href?: string
      contextId?: number
      /** @description Which publication is the latest published version. */
      currentPublicationId?: number
      /** @description The last time activity was recorded related to this submission. */
      dateLastActivity?: string
      dateSubmitted?: string
      id?: number
      /** @description The last time a modification was made to this submission or any of its associated objects. */
      lastModified?: string
      /** @description The primary language of this submission. */
      locale?: string
      /** @description A list of publications that have been created for this submission. */
      publications?: components['schemas']['Publication'][]
      /** @description Information about pending and completed review assignments. */
      reviewAssignments?: {
        id?: number
        isCurrentUserAssigned?: number
        status?: number
        statusLabel?: number
        dateDue?: number
        dateResponseDue?: number
        round?: number
        reviewRoundId?: number
      }[]
      /** @description A list of review rounds that have been opened for this submission. */
      reviewRounds?: components['schemas']['ReviewRound'][]
      /**
       * @description The stage of the editorial workflow that this submission is currently in. One of the `WORKFLOW_STAGE_` constants. Default is `WORKFLOW_STAGE_SUBMISSION`.
       * @default 1
       */
      stageId?: number
      /** @description Key data about the status, files and discussions of each stage. */
      stages?: {
        id?: number
        label?: string
        isActiveStage?: boolean
        currentUserAssignedRoles?: number[]
        status?: string
        statusId?: number
        files?: {
          count?: number
        }
        queries?: unknown[]
      }[]
      /**
       * @description Whether the submission is Published, Declined, Scheduled or Queued (still in the workflow). One of the `STATUS_*` constants. Default is `STATUS_QUEUED`.
       * @default 1
       */
      status?: number
      /** @description A human-readable version of the submission's status. It will be Published, Declined, Queued (still in the workflow) or Scheduled. */
      statusLabel?: string
      /**
       * @description This number tracks a submission's progress before it is submitted to the journal or press. After submission, it will be set to `0`, indicating it is ready for an editor's consideration.
       * @default 1
       */
      submissionProgress?: number
      /** @description A URL to the author's editorial workflow. */
      urlAuthorWorkflow?: string
      /** @description A URL to the editors' and assistants' editorial workflow. */
      urlEditorialWorkflow?: string
      /** @description A URL to the current publication or where it will be published. */
      urlPublished?: string
      /** @description A URL to the workflow most appropriate for the current user. It will match the `urlAuthorWorkflow` or `urlEditorialWorkflow. */
      urlWorkflow?: string
    }
    SubmissionFile: {
      /** Format: uri */
      _href?: string
      /** @description Used with `assocType` to associate this file with an object such as a galley. */
      assocId?: number
      /** @description Used with `assocId` to associate this file with an object such as a galley. One of the following constants: `ASSOC_TYPE_SUBMISSION_FILE` (dependent files), `ASSOC_TYPE_REVIEW_ASSIGNMENT` (files uploaded by a reviewer), `ASSOC_TYPE_NOTE` (files uploaded with a discussion), `ASSOC_TYPE_REPRESENTATION` (files uploaded to a galley or publication format), `ASSOC_TYPE_REVIEW_ROUND` (review files and revisions for a particular review round). */
      assocType?: number
      /** @description A caption for this file. Used with artwork such as images. */
      caption?: string
      /** @description The copyright owner of this file. Used with artwork such as images. */
      copyrightOwner?: string
      /** @description The date this submission file object was created in the system. Set automatically by the software. */
      createdAt?: string
      creator?: components['schemas']['LocaleObject']
      /** @description An attribution for this file, such as a photographer's name. Used with artwork such as images. */
      credit?: string
      /** @description Public metadata about when this content was created. Used with supplementary files. */
      dateCreated?: string
      /** @description Any dependent files, typically images or audio files that are loaded by an HTML file. */
      dependentFiles?: components['schemas']['SubmissionFile'][]
      description?: components['schemas']['LocaleObject']
      documentType?: string
      fileId?: number
      fileStage?: number
      genreId?: number
      id?: number
      /** @description The language of this file if it contains text. Used with supplementary files. */
      language?: string
      /** @description The primary locale of the submission this file is attached to. This locale is used as the fallback when a language is missing from a multilingual property. */
      locale?: string
      mimetype?: string
      name?: components['schemas']['LocaleObject']
      path?: string
      publisher?: components['schemas']['LocaleObject']
      /** @description Previous versions of this file. */
      revisions?: {
        documentType?: string
        fileId?: number
        mimetype?: string
        path?: string
        url?: string
      }[]
      source?: components['schemas']['LocaleObject']
      /** @description When a submission file is promoted from one stage to another, this property identifies the source file from which this file was promoted. Default: `null`. */
      sourceSubmissionFileId?: number
      sponsor?: components['schemas']['LocaleObject']
      subject?: components['schemas']['LocaleObject']
      submissionId?: number
      /** @description Licensing terms for this file. Used with artwork such as images. */
      terms?: string
      /** @description When this object was last updated. */
      updatedAt?: string
      uploaderUserId?: number
      url?: string
      viewable?: boolean
    }
    /** @description A theme with values for any of its theme options. The theme is provided in the `themePluginPath` key. Other keys may or may not exist depending on what options have been defined by that theme. */
    ThemeOptions: {
      themePluginPath?: string
      '...'?: string
    }
    TimelineInterval: {
      date?: string
      label?: string
      value?: number
    }
    User: {
      _href?: string
      affiliation?: components['schemas']['LocaleObject']
      authId?: number
      authString?: string
      billingAddress?: string
      biography?: components['schemas']['LocaleObject']
      country?: string
      dateLastRegistered?: string
      dateRegistered?: string
      dateValidated?: string
      disabled?: boolean
      disabledReason?: string
      email?: string
      familyName?: components['schemas']['LocaleObject']
      fullName?: string
      givenName?: components['schemas']['LocaleObject']
      gossip?: components['schemas']['LocaleObject']
      groups?: components['schemas']['UserGroup'][]
      id?: number
      interests?: components['schemas']['UserInterest'][]
      mailingAddress?: string
      mustChangePassword?: boolean
      orcid?: string
      phone?: string
      signature?: components['schemas']['LocaleObject']
      url?: string
      userName?: string
    }
    UserGroup: {
      abbrev?: components['schemas']['LocaleObject']
      id?: number
      name?: components['schemas']['LocaleObject']
      permitSelfRegistration?: boolean
      recommendOnly?: boolean
      roleId?: number
      showTitle?: boolean
    }
    /** @description A user's review interests. */
    UserInterest: {
      id?: number
      interest?: string
    }
    AnnouncementEditable: {
      /** @description The journal, press or preprint server ID. */
      assocId?: number
      /** @description The assoc object. This should always be `ASSOC_TYPE_JOURNAL` (OJS), `ASSOC_TYPE_PRESS` (OMP) or `ASSOC_TYPE_SERVER` (OPS). */
      assocType?: number
      /** @description (Optional) The date that this announcement expires, if one is set. This is typically used to express closing dates for calls for papers. */
      dateExpire?: string
      /** @description The date this announcement was posted. */
      datePosted?: string
      description?: components['schemas']['LocaleObject']
      descriptionShort?: components['schemas']['LocaleObject']
      id?: number
      title?: components['schemas']['LocaleObject']
      /** @description (Optional) One of the announcement type ids. */
      typeId?: number
    }
    AnnouncementSummary: {
      /**
       * Format: uri
       * @description The URL to this announcement in the REST API.
       */
      _href?: string
      /** @description The journal, press or preprint server ID. */
      assocId?: number
      /** @description The assoc object. This should always be `ASSOC_TYPE_JOURNAL` (OJS), `ASSOC_TYPE_PRESS` (OMP) or `ASSOC_TYPE_SERVER` (OPS). */
      assocType?: number
      /** @description (Optional) The date that this announcement expires, if one is set. This is typically used to express closing dates for calls for papers. */
      dateExpire?: string
      /** @description The date this announcement was posted. */
      datePosted?: string
      description?: components['schemas']['LocaleObject']
      descriptionShort?: components['schemas']['LocaleObject']
      id?: number
      title?: components['schemas']['LocaleObject']
      /** @description (Optional) One of the announcement type ids. */
      typeId?: number
    }
    AuthorEditable: {
      affiliation?: components['schemas']['LocaleObject']
      biography?: components['schemas']['LocaleObject']
      country?: string
      email?: string
      familyName?: components['schemas']['LocaleObject']
      givenName?: components['schemas']['LocaleObject']
      id?: number
      /**
       * @description Whether or not to include this contributor in author lists when the publication appears in search results, tables of content and catalog entries.
       * @default true
       */
      includeInBrowse?: boolean
      /** @description The ORCID of this contributor. See: https://orcid.org/ */
      orcid?: string
      preferredPublicName?: components['schemas']['LocaleObject']
      publicationId?: number
      /** @description The order in which this contributor should appear in a list of contriibutors. */
      seq?: number
      /** @description An optional URL to this contributor's webpage. */
      url?: string
      /** @description in which user group should this contributor be identified. Usually one of the author roles, such as Author or Translator. */
      userGroupId?: number
    }
    AuthorSummary: {
      affiliation?: components['schemas']['LocaleObject']
      email?: string
      familyName?: components['schemas']['LocaleObject']
      givenName?: components['schemas']['LocaleObject']
      id?: number
      /**
       * @description Whether or not to include this contributor in author lists when the publication appears in search results, tables of content and catalog entries.
       * @default true
       */
      includeInBrowse?: boolean
      /** @description The ORCID of this contributor. See: https://orcid.org/ */
      orcid?: string
      preferredPublicName?: components['schemas']['LocaleObject']
      publicationId?: number
      /** @description The order in which this contributor should appear in a list of contriibutors. */
      seq?: number
      /** @description The primary locale of the submission this author is attached to. This locale is used as the fallback when a language is missing from a multilingual property. */
      submissionLocale?: string
      /** @description in which user group should this contributor be identified. Usually one of the author roles, such as Author or Translator. */
      userGroupId?: number
    }
    ContextEditable: {
      abbreviation?: components['schemas']['LocaleObject']
      about?: components['schemas']['LocaleObject']
      acronym?: components['schemas']['LocaleObject']
      additionalHomeContent?: components['schemas']['LocaleObject']
      /** @description Enable agencies metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      agencies?: string
      announcementsIntroduction?: components['schemas']['LocaleObject']
      authorGuidelines?: components['schemas']['LocaleObject']
      authorInformation?: components['schemas']['LocaleObject']
      /** @description Enable citations metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      citations?: string
      clockssLicense?: components['schemas']['LocaleObject']
      competingInterests?: components['schemas']['LocaleObject']
      contactAffiliation?: components['schemas']['LocaleObject']
      contactEmail?: string
      contactName?: string
      contactPhone?: string
      copyrightHolderOther?: components['schemas']['LocaleObject']
      copyrightHolderType?: string
      copyrightNotice?: components['schemas']['LocaleObject']
      /** @default issue */
      copyrightYearBasis?: string
      /** @description Enable coverage metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      coverage?: string
      currency?: string
      customHeaders?: components['schemas']['LocaleObject']
      dateFormatLong?: components['schemas']['LocaleObject']
      dateFormatShort?: components['schemas']['LocaleObject']
      datetimeFormatLong?: components['schemas']['LocaleObject']
      datetimeFormatShort?: components['schemas']['LocaleObject']
      defaultMetricType?: string
      /** @default 2 */
      defaultReviewMode?: number
      delayedOpenAccessDuration?: number
      delayedOpenAccessPolicy?: components['schemas']['LocaleObject']
      description?: components['schemas']['LocaleObject']
      /** @description User groups that a manager will be prevented from sending bulk email to using the notify feature. Only the admin may edit this property. */
      disableBulkEmailUserGroups?: number[]
      /** @default false */
      disableSubmissions?: boolean
      disableUserReg?: boolean
      /** @description Enable disciplines metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      disciplines?: string
      editorialTeam?: components['schemas']['LocaleObject']
      emailSignature?: string
      enableAnnouncements?: boolean
      enableClockss?: boolean
      enableLockss?: boolean
      /** @default 1 */
      enableOai?: boolean
      enableOpenAccessNotification?: boolean
      enablePublisherId?: string[]
      enableSubscriptionOnlinePaymentNotificationPurchaseIndividual?: boolean
      enableSubscriptionOnlinePaymentNotificationPurchaseInstitutional?: boolean
      enableSubscriptionOnlinePaymentNotificationRenewIndividual?: boolean
      enableSubscriptionOnlinePaymentNotificationRenewInstitutional?: boolean
      enabled?: boolean
      envelopeSender?: string
      favicon?: {
        type?: unknown
        properties?: unknown
        en_US?: {
          temporaryFileId?: number
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
        fr_CA?: {
          temporaryFileId?: number
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
      }
      homepageImage?: {
        type?: unknown
        properties?: unknown
        en_US?: {
          temporaryFileId?: number
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
        fr_CA?: {
          temporaryFileId?: number
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
      }
      /** @default 25 */
      itemsPerPage?: number
      journalThumbnail?: {
        type?: unknown
        properties?: unknown
        en_US?: {
          temporaryFileId?: number
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
        fr_CA?: {
          temporaryFileId?: number
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
      }
      /**
       * @description Enable keywords metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission.
       * @default request
       */
      keywords?: string
      /** @description Enable languages metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      languages?: string
      librarianInformation?: components['schemas']['LocaleObject']
      licenseTerms?: components['schemas']['LocaleObject']
      licenseUrl?: string
      lockssLicense?: components['schemas']['LocaleObject']
      mailingAddress?: string
      /** @default 0 */
      membershipFee?: number
      membershipFeeDescription?: components['schemas']['LocaleObject']
      membershipFeeName?: components['schemas']['LocaleObject']
      name?: components['schemas']['LocaleObject']
      numAnnouncementsHomepage?: number
      numDaysBeforeInviteReminder?: number
      numDaysBeforeSubmitReminder?: number
      numMonthsAfterSubscriptionExpiryReminder?: number
      numMonthsBeforeSubscriptionExpiryReminder?: number
      /** @default 10 */
      numPageLinks?: number
      numWeeksAfterSubscriptionExpiryReminder?: number
      numWeeksBeforeSubscriptionExpiryReminder?: number
      /** @default 4 */
      numWeeksPerResponse?: number
      /** @default 4 */
      numWeeksPerReview?: number
      onlineIssn?: string
      openAccessPolicy?: components['schemas']['LocaleObject']
      pageFooter?: components['schemas']['LocaleObject']
      pageHeaderLogoImage?: {
        type?: unknown
        properties?: unknown
        en_US?: {
          temporaryFileId?: number
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
        fr_CA?: {
          temporaryFileId?: number
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
      }
      paymentPluginName?: string
      paymentsEnabled?: boolean
      primaryLocale?: string
      printIssn?: string
      privacyStatement?: components['schemas']['LocaleObject']
      /** @default 0 */
      publicationFee?: number
      publicationFeeDescription?: components['schemas']['LocaleObject']
      publicationFeeName?: components['schemas']['LocaleObject']
      publisherInstitution?: string
      publishingMode?: number
      /** @default 0 */
      purchaseArticleFee?: number
      purchaseArticleFeeDescription?: components['schemas']['LocaleObject']
      purchaseArticleFeeEnabled?: boolean
      purchaseArticleFeeName?: components['schemas']['LocaleObject']
      purchaseIssueFee?: number
      purchaseIssueFeeEnabled?: boolean
      rateReviewerOnQuality?: boolean
      readerInformation?: components['schemas']['LocaleObject']
      restrictArticleAccess?: boolean
      restrictOnlyPdf?: boolean
      restrictReviewerFileAccess?: boolean
      restrictSiteAccess?: boolean
      reviewGuidelines?: components['schemas']['LocaleObject']
      reviewerAccessKeysEnabled?: boolean
      /** @description Enable rights metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      rights?: string
      searchDescription?: components['schemas']['LocaleObject']
      seq?: number
      showEnsuringLink?: boolean
      sidebar?: string[]
      /** @description Enable source metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      source?: string
      styleSheet?: {
        temporaryFileId?: number
        name?: string
        uploadName?: string
        dateUploaded?: string
      }
      /** @description Enable subjects metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      subjects?: string
      /**
       * @default [
       *   {
       *     "order": 1,
       *     "content": {
       *       "defaultLocaleKey": "default.contextSettings.checklist.notPreviouslyPublished"
       *     }
       *   },
       *   {
       *     "order": 2,
       *     "content": {
       *       "defaultLocaleKey": "default.contextSettings.checklist.fileFormat"
       *     }
       *   },
       *   {
       *     "order": 3,
       *     "content": {
       *       "defaultLocaleKey": "default.contextSettings.checklist.addressesLinked"
       *     }
       *   },
       *   {
       *     "order": 4,
       *     "content": {
       *       "defaultLocaleKey": "default.contextSettings.checklist.submissionAppearance"
       *     }
       *   },
       *   {
       *     "order": 5,
       *     "content": {
       *       "defaultLocaleKey": "default.contextSettings.checklist.bibliographicRequirements"
       *     }
       *   }
       * ]
       */
      submissionChecklist?: {
        order?: number
        content?: string
      }[]
      submissionFee?: number
      submissionFeeDescription?: components['schemas']['LocaleObject']
      submissionFeeName?: components['schemas']['LocaleObject']
      subscriptionAdditionalInformation?: components['schemas']['LocaleObject']
      subscriptionEmail?: string
      subscriptionExpiryPartial?: boolean
      subscriptionMailingAddress?: string
      subscriptionName?: string
      subscriptionPhone?: string
      supportEmail?: string
      supportName?: string
      supportPhone?: string
      supportedFormLocales?: string[]
      supportedLocales?: string[]
      supportedSubmissionLocales?: string[]
      /** @default default */
      themePluginPath?: string
      timeFormat?: components['schemas']['LocaleObject']
      /** @description Enable types metadata. `0` is disabled. `enable` will make it available in the workflow. `request` will allow an author to enter a value during submission. `require` will require that the author enter a value during submission. */
      type?: string
      urlPath?: string
    }
    ContextSummary: {
      /** Format: uri */
      _href?: string
      abbreviation?: components['schemas']['LocaleObject']
      acronym?: components['schemas']['LocaleObject']
      description?: components['schemas']['LocaleObject']
      enabled?: boolean
      id?: number
      journalThumbnail?: {
        type?: unknown
        properties?: unknown
        en_US?: { [key: string]: unknown }
        fr_CA?: { [key: string]: unknown }
      }
      name?: components['schemas']['LocaleObject']
      seq?: number
      url?: string
      urlPath?: string
    }
    EmailTemplateEditable: {
      body?: components['schemas']['LocaleObject']
      /** @description The ID of the context (journal/press) this email is related to. Only used for custom email templates. Default is `null`. */
      contextId?: number
      /** @description Is this email template enabled? Default is `true`. */
      enabled?: boolean
      /** @description A unique key for this email template. */
      key?: string
      subject?: components['schemas']['LocaleObject']
    }
    EmailTemplateSummary: {
      /** Format: uri */
      _href?: string
      body?: components['schemas']['LocaleObject']
      /** @description Can this email template be disabled in the context settings area? Default is `true`. */
      canDisable?: boolean
      /** @description Can this email template be edited in the context settings area? Default is `true`. */
      canEdit?: boolean
      /** @description The ID of the context (journal/press) this email is related to. Only used for custom email templates. Default is `null`. */
      contextId?: number
      description?: components['schemas']['LocaleObject']
      /** @description Is this email template enabled? Default is `true`. */
      enabled?: boolean
      /** @description The `ROLE_ID_*` of the user who will send this email. */
      fromRoleId?: number
      /** @description The email template ID. */
      id?: number
      /** @description A unique key for this email template. */
      key?: string
      /** @description The `WORKFLOW_STAGE_ID_*` that email template is associated with or `null` if it is not associated with a stage. */
      stageId?: number
      subject?: components['schemas']['LocaleObject']
      /** @description The `ROLE_ID_*` of the user who will receive this email. */
      toRoleId?: number
    }
    GalleyEditable: {
      isApproved?: boolean
      /** @description A human-readable label for this galley. For the primary article, it is usually indicates the format like PDF, ePub or full text. For supplementary files it often indicates the content, such as source data or interview transcripts. */
      label?: string
      /** @description The primary locale of this galley. */
      locale?: string
      /** @description A unique ID provided by the publisher. It will be used in the publication's URL path instead of the `id` when present. */
      'pub-id::publisher-id'?: string
      publicationId?: number
      /** @description In what order this galley should appear in lists of galleys for this publication. */
      seq?: number
      submissionFileId?: number
      /** @description An optional path to use in the URL instead of the ID. */
      urlPath?: string
      /** @description An optional URL where the galley can be viewed or downloaded. */
      urlRemote?: string
    }
    GalleySummary: {
      file?: components['schemas']['SubmissionFile']
      id?: number
      isApproved?: boolean
      /** @description A human-readable label for this galley. For the primary article, it is usually indicates the format like PDF, ePub or full text. For supplementary files it often indicates the content, such as source data or interview transcripts. */
      label?: string
      /** @description The primary locale of this galley. */
      locale?: string
      /** @description A unique ID provided by the publisher. It will be used in the publication's URL path instead of the `id` when present. */
      'pub-id::publisher-id'?: string
      publicationId?: number
      /** @description In what order this galley should appear in lists of galleys for this publication. */
      seq?: number
      submissionFileId?: number
      /** @description The URL where this galley can be viewed or downloaded. */
      urlPublished?: string
      /** @description An optional URL where the galley can be viewed or downloaded. */
      urlRemote?: string
    }
    IssueEditable: {
      coverImageAltText?: components['schemas']['LocaleObject']
      coverImageUrl?: components['schemas']['LocaleObject']
      dateNotified?: string
      datePublished?: string
      description?: components['schemas']['LocaleObject']
      doi?: string
      id?: number
      lastModified?: string
      number?: string
      publishedUrl?: string
      title?: components['schemas']['LocaleObject']
      /** @description An optional path to use in the URL instead of the ID. */
      urlPath?: string
      volume?: number
      year?: number
    }
    IssueSummary: {
      _href?: string
      coverImageAltText?: components['schemas']['LocaleObject']
      coverImageUrl?: components['schemas']['LocaleObject']
      datePublished?: string
      description?: components['schemas']['LocaleObject']
      galleys?: components['schemas']['Galley'][]
      id?: number
      identification?: string
      number?: string
      publishedUrl?: string
      title?: components['schemas']['LocaleObject']
      volume?: number
      year?: number
    }
    PublicationEditable: {
      abstract?: components['schemas']['LocaleObject']
      /** @default 0 */
      accessStatus?: number
      categoryIds?: number[]
      /** @description Optional metadata that contains references for works cited in this submission as raw text. */
      citationsRaw?: string
      copyrightHolder?: components['schemas']['LocaleObject']
      /** @description The copyright year for this publication. */
      copyrightYear?: number
      coverImage?: {
        type?: unknown
        properties?: unknown
        en_US?: {
          temporaryFileId?: number
          dateUploaded?: string
          uploadName?: string
          altText?: string
        }
        fr_CA?: {
          temporaryFileId?: number
          dateUploaded?: string
          uploadName?: string
          altText?: string
        }
      }
      coverage?: components['schemas']['LocaleObject']
      datePublished?: string
      /** @description Optional metadata that describes the submission's types of study or branches of knowledge. */
      disciplines?: string[]
      /**
       * @description Whether the contributor details should be displayed for this publication. Commonly used for editorial statements without individual authorship.
       * @default false
       */
      hideAuthor?: boolean
      issueId?: number
      /** @description Optional metadata, usually one- to three-word phrases that are used to indicate the main topics of a submission. */
      keywords?: string[]
      /** @description Optional metadata that identifies the submission's primary language. */
      languages?: string[]
      lastModified?: string
      /** @description A URL to a webpage describing the license terms for this publication. */
      licenseUrl?: string
      /** @description The pages of the issue in which this article appears if it is published in a physical format. */
      pages?: string
      prefix?: components['schemas']['LocaleObject']
      /** @description Which `contributor` is the primary contact for this publication. */
      primaryContactId?: number
      /** @description A unique ID provided by the publisher. It will be used in the publication's URL path instead of the `id` when present. */
      'pub-id::publisher-id'?: string
      rights?: components['schemas']['LocaleObject']
      sectionId?: number
      /** @default 0 */
      seq?: number
      source?: components['schemas']['LocaleObject']
      /**
       * @description Whether the publication is Queued (not yet scheduled for publication), Declined, Published or Scheduled (scheduled for publication at a future date). One of the `STATUS_*` constants. Default is `STATUS_QUEUED`.
       * @default 1
       */
      status?: number
      /** @description Optional metadata that consists of keywords, key phrases or classification codes that describe the submission's topics. */
      subjects?: string[]
      submissionId?: number
      subtitle?: components['schemas']['LocaleObject']
      /** @description Optional metadata that indicates the source of research funding or other institutional support. */
      supportingAgencies?: string[]
      title?: components['schemas']['LocaleObject']
      type?: components['schemas']['LocaleObject']
      /** @description An optional path to use in the URL instead of the ID. */
      urlPath?: string
      /** @description The version number of this publication. Version numbers should increment by one so that the third publication of a submission will have the version number `3`. Version numbers should typically be set automatically and editorial staff should not be encouraged to modify them. */
      version?: number
    }
    PublicationSummary: {
      /** Format: uri */
      _href?: string
      /** @description All of the authors rendered with the appropriate separators according to the locale. */
      authorsString?: string
      /** @description A shortened version of the authors rendered with the appropriate separators according to the locale. */
      authorsStringShort?: string
      categoryIds?: number[]
      coverImage?: {
        type?: unknown
        properties?: unknown
        en_US?: { [key: string]: unknown }
        fr_CA?: { [key: string]: unknown }
      }
      datePublished?: string
      fullTitle?: components['schemas']['LocaleObject']
      galleys?: components['schemas']['Galley'][]
      id?: number
      /** @description The primary locale of the submission this publication is attached to. This locale is used as the fallback when a language is missing from a multilingual property. */
      locale?: string
      /** @description The pages of the issue in which this article appears if it is published in a physical format. */
      pages?: string
      prefix?: components['schemas']['LocaleObject']
      /** @description Which `contributor` is the primary contact for this publication. */
      primaryContactId?: number
      /** @description A unique ID provided by the publisher. It will be used in the publication's URL path instead of the `id` when present. */
      'pub-id::publisher-id'?: string
      sectionId?: number
      /**
       * @description Whether the publication is Queued (not yet scheduled for publication), Declined, Published or Scheduled (scheduled for publication at a future date). One of the `STATUS_*` constants. Default is `STATUS_QUEUED`.
       * @default 1
       */
      status?: number
      submissionId?: number
      subtitle?: components['schemas']['LocaleObject']
      title?: components['schemas']['LocaleObject']
      /** @description The public URL for this publication or where it will be available if it has not yet been published. */
      urlPublished?: string
      /** @description The version number of this publication. Version numbers should increment by one so that the third publication of a submission will have the version number `3`. Version numbers should typically be set automatically and editorial staff should not be encouraged to modify them. */
      version?: number
    }
    ReviewRoundEditable: {
      id?: number
      round?: number
      stageId?: number
      statusId?: number
    }
    SectionEditable: {
      abbrev?: components['schemas']['LocaleObject']
      id?: number
      seq?: number
      title?: components['schemas']['LocaleObject']
    }
    SectionSummary: {
      abbrev?: components['schemas']['LocaleObject']
      id?: number
      seq?: number
      title?: components['schemas']['LocaleObject']
    }
    SiteEditable: {
      about?: components['schemas']['LocaleObject']
      contactEmail?: components['schemas']['LocaleObject']
      contactName?: components['schemas']['LocaleObject']
      /** @description Which hosted journals, presses or preprint servers are allowed to send bulk emails. */
      enableBulkEmails?: number[]
      installedLocales?: string[]
      minPasswordLength?: number
      pageFooter?: components['schemas']['LocaleObject']
      pageHeaderTitleImage?: {
        type?: unknown
        properties?: unknown
        en_US?: {
          temporaryFileId?: number
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
        fr_CA?: {
          temporaryFileId?: number
          name?: string
          uploadName?: string
          width?: number
          height?: number
          dateUploaded?: string
          altText?: string
        }
      }
      primaryLocale?: string
      privacyStatement?: components['schemas']['LocaleObject']
      redirect?: number
      sidebar?: string[]
      styleSheet?: {
        temporaryFileId?: number
        name?: string
        uploadName?: string
        dateUploaded?: string
      }
      supportedLocales?: string[]
      /** @default default */
      themePluginPath?: string
      title?: components['schemas']['LocaleObject']
    }
    SubmissionEditable: {
      contextId?: number
      /** @description Which publication is the latest published version. */
      currentPublicationId?: number
      /** @description The last time activity was recorded related to this submission. */
      dateLastActivity?: string
      dateSubmitted?: string
      id?: number
      /** @description The last time a modification was made to this submission or any of its associated objects. */
      lastModified?: string
      /** @description The primary language of this submission. */
      locale?: string
      /**
       * @description The stage of the editorial workflow that this submission is currently in. One of the `WORKFLOW_STAGE_` constants. Default is `WORKFLOW_STAGE_SUBMISSION`.
       * @default 1
       */
      stageId?: number
      /**
       * @description Whether the submission is Published, Declined, Scheduled or Queued (still in the workflow). One of the `STATUS_*` constants. Default is `STATUS_QUEUED`.
       * @default 1
       */
      status?: number
      /**
       * @description This number tracks a submission's progress before it is submitted to the journal or press. After submission, it will be set to `0`, indicating it is ready for an editor's consideration.
       * @default 1
       */
      submissionProgress?: number
    }
    SubmissionSummary: {
      _href?: string
      contextId?: number
      /** @description Which publication is the latest published version. */
      currentPublicationId?: number
      /** @description The last time activity was recorded related to this submission. */
      dateLastActivity?: string
      dateSubmitted?: string
      id?: number
      /** @description The last time a modification was made to this submission or any of its associated objects. */
      lastModified?: string
      /** @description The primary language of this submission. */
      locale?: string
      /** @description A list of publications that have been created for this submission. */
      publications?: components['schemas']['Publication'][]
      /**
       * @description The stage of the editorial workflow that this submission is currently in. One of the `WORKFLOW_STAGE_` constants. Default is `WORKFLOW_STAGE_SUBMISSION`.
       * @default 1
       */
      stageId?: number
      /**
       * @description Whether the submission is Published, Declined, Scheduled or Queued (still in the workflow). One of the `STATUS_*` constants. Default is `STATUS_QUEUED`.
       * @default 1
       */
      status?: number
      /** @description A human-readable version of the submission's status. It will be Published, Declined, Queued (still in the workflow) or Scheduled. */
      statusLabel?: string
      /**
       * @description This number tracks a submission's progress before it is submitted to the journal or press. After submission, it will be set to `0`, indicating it is ready for an editor's consideration.
       * @default 1
       */
      submissionProgress?: number
      /** @description A URL to the author's editorial workflow. */
      urlAuthorWorkflow?: string
      /** @description A URL to the editors' and assistants' editorial workflow. */
      urlEditorialWorkflow?: string
      /** @description A URL to the current publication or where it will be published. */
      urlPublished?: string
      /** @description A URL to the workflow most appropriate for the current user. It will match the `urlAuthorWorkflow` or `urlEditorialWorkflow. */
      urlWorkflow?: string
    }
    SubmissionFileEditable: {
      /** @description Used with `assocType` to associate this file with an object such as a galley. */
      assocId?: number
      /** @description Used with `assocId` to associate this file with an object such as a galley. One of the following constants: `ASSOC_TYPE_SUBMISSION_FILE` (dependent files), `ASSOC_TYPE_REVIEW_ASSIGNMENT` (files uploaded by a reviewer), `ASSOC_TYPE_NOTE` (files uploaded with a discussion), `ASSOC_TYPE_REPRESENTATION` (files uploaded to a galley or publication format), `ASSOC_TYPE_REVIEW_ROUND` (review files and revisions for a particular review round). */
      assocType?: number
      /** @description A caption for this file. Used with artwork such as images. */
      caption?: string
      /** @description The copyright owner of this file. Used with artwork such as images. */
      copyrightOwner?: string
      /** @description The date this submission file object was created in the system. Set automatically by the software. */
      createdAt?: string
      creator?: components['schemas']['LocaleObject']
      /** @description An attribution for this file, such as a photographer's name. Used with artwork such as images. */
      credit?: string
      /** @description Public metadata about when this content was created. Used with supplementary files. */
      dateCreated?: string
      description?: components['schemas']['LocaleObject']
      /** Format: binary */
      file?: string
      fileId?: number
      fileStage?: number
      genreId?: number
      /** @description The language of this file if it contains text. Used with supplementary files. */
      language?: string
      name?: components['schemas']['LocaleObject']
      publisher?: components['schemas']['LocaleObject']
      source?: components['schemas']['LocaleObject']
      /** @description When a submission file is promoted from one stage to another, this property identifies the source file from which this file was promoted. Default: `null`. */
      sourceSubmissionFileId?: number
      sponsor?: components['schemas']['LocaleObject']
      subject?: components['schemas']['LocaleObject']
      submissionId?: number
      /** @description Licensing terms for this file. Used with artwork such as images. */
      terms?: string
      /** @description When this object was last updated. */
      updatedAt?: string
      uploaderUserId?: number
      viewable?: boolean
    }
    SubmissionFileSummary: {
      /** Format: uri */
      _href?: string
      /** @description Used with `assocType` to associate this file with an object such as a galley. */
      assocId?: number
      /** @description Used with `assocId` to associate this file with an object such as a galley. One of the following constants: `ASSOC_TYPE_SUBMISSION_FILE` (dependent files), `ASSOC_TYPE_REVIEW_ASSIGNMENT` (files uploaded by a reviewer), `ASSOC_TYPE_NOTE` (files uploaded with a discussion), `ASSOC_TYPE_REPRESENTATION` (files uploaded to a galley or publication format), `ASSOC_TYPE_REVIEW_ROUND` (review files and revisions for a particular review round). */
      assocType?: number
      /** @description A caption for this file. Used with artwork such as images. */
      caption?: string
      /** @description The copyright owner of this file. Used with artwork such as images. */
      copyrightOwner?: string
      /** @description The date this submission file object was created in the system. Set automatically by the software. */
      createdAt?: string
      creator?: components['schemas']['LocaleObject']
      /** @description An attribution for this file, such as a photographer's name. Used with artwork such as images. */
      credit?: string
      /** @description Public metadata about when this content was created. Used with supplementary files. */
      dateCreated?: string
      description?: components['schemas']['LocaleObject']
      documentType?: string
      fileId?: number
      fileStage?: number
      genreId?: number
      id?: number
      /** @description The language of this file if it contains text. Used with supplementary files. */
      language?: string
      /** @description The primary locale of the submission this file is attached to. This locale is used as the fallback when a language is missing from a multilingual property. */
      locale?: string
      mimetype?: string
      name?: components['schemas']['LocaleObject']
      path?: string
      publisher?: components['schemas']['LocaleObject']
      source?: components['schemas']['LocaleObject']
      /** @description When a submission file is promoted from one stage to another, this property identifies the source file from which this file was promoted. Default: `null`. */
      sourceSubmissionFileId?: number
      sponsor?: components['schemas']['LocaleObject']
      subject?: components['schemas']['LocaleObject']
      submissionId?: number
      /** @description Licensing terms for this file. Used with artwork such as images. */
      terms?: string
      /** @description When this object was last updated. */
      updatedAt?: string
      uploaderUserId?: number
      url?: string
      viewable?: boolean
    }
    UserEditable: {
      affiliation?: components['schemas']['LocaleObject']
      authId?: number
      authString?: string
      billingAddress?: string
      biography?: components['schemas']['LocaleObject']
      country?: string
      dateLastRegistered?: string
      dateRegistered?: string
      dateValidated?: string
      disabled?: boolean
      disabledReason?: string
      email?: string
      familyName?: components['schemas']['LocaleObject']
      givenName?: components['schemas']['LocaleObject']
      gossip?: components['schemas']['LocaleObject']
      mailingAddress?: string
      mustChangePassword?: boolean
      orcid?: string
      phone?: string
      signature?: components['schemas']['LocaleObject']
      url?: string
      userName?: string
    }
    UserSummary: {
      _href?: string
      disabled?: boolean
      email?: string
      fullName?: string
      groups?: components['schemas']['UserGroup'][]
      id?: number
      orcid?: string
      userName?: string
    }
    UserGroupEditable: {
      abbrev?: components['schemas']['LocaleObject']
      id?: number
      name?: components['schemas']['LocaleObject']
      permitSelfRegistration?: boolean
      recommendOnly?: boolean
      roleId?: number
      showTitle?: boolean
    }
  }
  requestBodies: {
    /** The details you want to edit. The `themePluginPath` is required to specify the active theme, even if the theme is not being changed. Any additional keys/values must match the options defined by that theme. */
    ThemeOptions: {
      content: {
        'application/json': components['schemas']['ThemeOptions']
      }
    }
  }
}

export interface operations {}

export interface external {}
